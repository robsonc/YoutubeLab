doctype html
html
	head
		title Youtube Lab
		
		script(src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.1/socket.io.js")
		script(src="/bower_components/artyom.js/build/artyom.window.min.js")
		script(src="/bower_components/animejs/anime.min.js")
		script(src="/bower_components/angular/angular.min.js")
		script(src="/javascripts/main.js")

		link(href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css", rel="stylesheet", 
			integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7", crossorigin="anonymous")
		link(href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css", rel="stylesheet", 
			integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r", crossorigin="anonymous")
		link(href='https://fonts.googleapis.com/css?family=Roboto+Condensed:400,400italic,700,700italic|Roboto:400,400italic,500,500italic,700,700italic', 
			rel='stylesheet', type='text/css')
			
		link(href="/stylesheets/style.css", rel="stylesheet", type="text/css")

	body(ng-app='youtubeLab')
		div#topbar.nav.navbar.navbar-default.navbar-fixed-top
			div.navbar-header
				a.navbar-brand(href="/") Youtube Lab

			#navbar.navbar-collapse.collapse
				form.navbar-form.navbar-left(role="search", action="/", method="get")
					.form-group
						input(id="input-busca" type="text" name="q" class="form-control" placeholder="Search")
						button(id="btn-buscar" type="submit" class="btn btn-default") Search
				ul.nav.navbar-nav
					li
						a(href='/game-plan') Game Plan
					li
						a(href='/files') Files
		div.container
			.row
				.col-md-12
					//- p#text-speech
					//- button#btn-start.btn.btn-primary Start Speech
					
					block content

		script.
			//- anime({
			//- 	targets: 'div',
			//- 	translateX: [
			//- 		{ value: 100, duration: 1200 },
			//- 		{ value: 0, duration: 800 }
			//- 	],
			//- 	rotate: '1turn',

			//- 	duration: 2000,
			//- 	loop: false
			//- });

			//- function synthVoice(text) {
			//- 	const synth = window.speechSynthesis;
			//- 	const utterance = new SpeechSynthesisUtterance();
			//- 	utterance.text = text;
			//- 	synth.speak(utterance);
			//- };

			//- function userSaid(str, s) {
			//- 	return str.indexOf(s) > -1;
			//- };

			//- function extractSearchTerm(text) {
			//- 	return text.trim().substring(6, text.length);
			//- }

			const btnStart = document.querySelector('#btn-start');
			const btnBuscar = document.querySelector("#btn-buscar");
			const btnNext = document.querySelector('.btn-next');
			const btnPrev = document.querySelector('.btn-prev');
			const inputBusca = document.querySelector("#input-busca");
			const textSpeechParagraph = document.querySelector('#text-speech');

			const artyom = new Artyom();
			const socket = io("http://localhost:3002");

			socket.on('message', function(message){
				artyom.say(message);
			});

			//- const SpeechRecognition = window.speechRecognition || window.webkitSpeechRecognition;
			//- const recognition = new SpeechRecognition();
			
			//- recognition.continuous = true;
			//recognition.interimResults = true;

			//- recognition.start();

			//- btnStart.addEventListener('click', function() {
			//- 		recognition.start();
			//- });

			//- recognition.addEventListener('result', function(e) {
			//- 	console.log(e.results);

			//- 	let last = e.results.length - 1;
			//- 	let text = e.results[last][0].transcript;

			//- 	socket.emit('voice command', text);
			//- 	console.log(text);
			//- 	textSpeechParagraph.innerHTML = text;
			//- 	//synthVoice(text);

			//- 	if (userSaid(text, "buscar")) {
			//- 		inputBusca.value = extractSearchTerm(text);
			//- 		//inputBusca.focus();
			//- 		btnBuscar.click();
			//- 		//recognition.resume();
			//- 	}

			//- 	if (userSaid(text, 'next')) {
			//- 		btnNext.click();
			//- 	}

			//- 	if (userSaid(text, 'previous')) {
			//- 		btnPrev.click();
			//- 	}

			//- 	console.log('Confidence: ' + e.results[0][0].confidence);
			//- });

			//- recognition.onend = function() {
			//- 	console.log('stop recognition');
			//- 	recognition.start();
			//- }

			

			function startOneCommandArtyom(){
				artyom.fatality();// use this to stop any of

				setTimeout(function(){// if you use artyom.fatality , wait 250 ms to initialize again.
					artyom.initialize({
						soundex: true,// Use the soundex algorithm to increase accuracy
						lang:"pt-BR",// A lot of languages are supported. Read the docs !
						continuous:true,// recognize 1 command and stop listening !
						listen:true, // Start recognizing
						debug:true, // Show everything in the console
						speed:1, // talk normally
						//- name: "Zé",
						//- executionKeyword: "ok",
					}).then(function(){
						console.log("Ready to work !");
					});
				}, 250);
			}

			var commandHello = {
				indexes: ["hello","e ae","então"], // These spoken words will trigger the execution of the command
				action: function(){ // Action to be executed when a index match with spoken word
					artyom.say("Fala aí? O que você gostaria de assistir?");
				}
			};

			var commandBuscar = {
				indexes: ['buscar *', 'pesquisar *', 'procurar *'],
				smart: true,
				action: function(i, wildcard){
					inputBusca.value = wildcard;
					btnBuscar.click();
				}
			}

			var nextCommand = {
				indexes: ['next', 'próximo', 'próxima','próxima página'],
				action: () => {
					btnNext.click();
				}
			};

			var previousCommand = {
				indexes: ['anterior', 'previous', 'página anterior','voltar página'],
				action: () => {
					btnPrev.click();
				}
			};
			
			var sharamanaiasCommand = {
				indexes: ['sharamanaias'],
				action: () => {
					artyom.say('Vai começar o re té té de fogo');
					artyom.say('ripa lá pra trás');
				}
			};

			artyom.addCommands([commandHello, commandBuscar, nextCommand, previousCommand, sharamanaiasCommand]); // Add the command with addCommands method. Nowow

			startOneCommandArtyom();